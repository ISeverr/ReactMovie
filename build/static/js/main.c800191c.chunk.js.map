{"version":3,"sources":["components/images/reactMovie_logo.png","components/images/tmdb_logo.svg","components/styles/StyledHeader.js","components/elements/Header.jsx","config.js","components/styles/StyledGrid.js","components/elements/Grid.jsx","components/styles/StyledHeroImage.js","components/elements/HeroImage.jsx","components/styles/StyledLoadMoreBtn.js","components/elements/LoadMoreBtn.jsx","components/styles/StyledMovieThumb.js","components/elements/MovieThumb.jsx","components/styles/StyledSearchBar.js","components/elements/SearchBar.jsx","components/styles/StyledSpinner.js","components/elements/Spinner.jsx","components/hooks/useHomeFetch.jsx","components/Home.jsx","components/styles/StyledNavigation.js","components/elements/Navigation.jsx","components/styles/StyledMovieInfo.js","components/elements/MovieInfo.jsx","helpers.js","components/styles/StyledMovieInfoBar.js","components/elements/MovieInfoBar.jsx","components/styles/StyledActor.js","components/elements/Actor.jsx","components/hooks/useMovieFetch.jsx","components/Moive.jsx","components/NotFound.js","components/styles/GlobalStyle.js","components/App.js","index.js","components/images/no_image.jpg"],"names":["module","exports","StyledHeader","styled","div","StyledRMDBLogo","img","StyledTMDBLogo","Header","className","to","src","RMDBLogo","alt","TMDBLogo","API_URL","API_KEY","SEARCH_BASE_URL","POPULAR_BASE_URL","IMAGE_BASE_URL","StyledGrid","StyledGridContent","Grid","header","children","StyledHeroImage","props","image","HeroImage","title","text","StyledLoadMoreBtn","button","LoadMoreBtn","callback","type","onClick","StyledMovieThumb","MovieThumb","movieId","clickable","StyledSearchBar","StyledSearchBarContent","SearchBar","useState","state","setState","timeOut","useRef","name","size","palceholder","onChange","event","value","target","clearTimeout","current","setTimeout","StyledSpinner","Spinner","Home","searchTerm","setSearchTerm","movies","loading","setLoading","error","setError","fetchMovies","endpoint","a","isLoadMore","search","fetch","json","result","prev","results","heroImage","currentPage","page","totalPages","total_pages","console","log","useEffect","sessionStorage","homeState","JSON","parse","setItem","stringify","useHomeFetch","backdrop_path","original_title","overview","endPoint","map","movie","key","id","poster_path","NoImage","movieName","searchEndPoint","popularEndPoint","StyledNavigation","Navigation","StyledMovieInfo","backdrop","MovieInfo","vote_average","directors","length","element","credit_id","convertMoney","money","Intl","NumberFormat","style","currency","minimumFractionDigits","format","StyledMovieInfoBar","MovieInfoBar","time","budget","revenue","hours","Math","floor","mins","calcTime","StyledActor","Actor","actor","profile_path","character","Movie","fetchData","useCallback","creditsEndpoint","creditsResult","crew","filter","member","job","actors","cast","localStorage","useMovieFetch","runtime","NotFound","GlobalStyle","createGlobalStyle","App","path","default","ReactDOM","render","document","getElementById"],"mappings":"sHAAAA,EAAOC,QAAU,IAA0B,6C,mBCA3CD,EAAOC,QAAU,IAA0B,uC,4+BCEpC,IAAMC,EAAeC,IAAOC,IAAV,KAmBZC,EAAiBF,IAAOG,IAAV,KAUdC,EAAiBJ,IAAOG,IAAV,KCZZE,EAXA,kBACX,kBAACN,EAAD,KACI,yBAAKO,UAAU,kBACX,kBAAC,IAAD,CAAMC,GAAG,KACL,kBAACL,EAAD,CAAgBM,IAAKC,IAAUC,IAAI,cACnC,kBAACN,EAAD,CAAgBI,IAAKG,IAAUD,IAAI,kB,OCT7CE,EAAU,gCACVC,EAAU,mCAEVC,EAAe,UAAMF,EAAN,gCAAqCC,EAArC,WACfE,EAAgB,UAAMH,EAAN,iCAAsCC,GAEtDG,EAAiB,6B,iiCCRhB,IAAMC,EAAajB,IAAOC,IAAV,KAcViB,EAAoBlB,IAAOC,IAAV,KCEfkB,EAbF,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,SAAX,OACT,kBAACJ,EAAD,KACI,4BAAKG,GACL,kBAACF,EAAD,KACKG,K,kuCCPN,IAAMC,EAAkBtB,IAAOC,IAAV,IACZ,SAAAsB,GAAK,oJAOVA,EAAMC,MAPI,iBCWNC,EAVG,SAAC,GAAD,IAAGD,EAAH,EAAGA,MAAOE,EAAV,EAAUA,MAAOC,EAAjB,EAAiBA,KAAjB,OACd,kBAACL,EAAD,CAAiBE,MAAOA,GACpB,yBAAKlB,UAAU,qBACX,yBAAKA,UAAU,kBACX,4BAAKoB,GACL,2BAAIC,O,yaCPb,IAAMC,EAAoB5B,IAAO6B,OAAV,KCOfC,EALK,SAAC,GAAD,IAAGH,EAAH,EAAGA,KAAMI,EAAT,EAASA,SAAT,OAChB,kBAACH,EAAD,CAAmBI,KAAK,SAASC,QAASF,GACrCJ,I,+nBCJF,IAAMO,EAAmBlC,IAAOC,IAAV,KCedkC,EAZI,SAAC,GAAD,IAAGX,EAAH,EAAGA,MAAOY,EAAV,EAAUA,QAASC,EAAnB,EAAmBA,UAAnB,OACf,kBAACH,EAAD,KACKG,EACG,kBAAC,IAAD,CAAM9B,GAAE,WAAM6B,IACV,yBAAK9B,UAAU,YAAYE,IAAKgB,EAAOd,IAAI,gBAG/C,yBAAKF,IAAKgB,EAAOd,IAAI,iB,29BCV1B,IAAM4B,EAAkBtC,IAAOC,IAAV,KASfsC,EAAyBvC,IAAOC,IAAV,KCwBpBuC,EA9BG,SAAC,GAAkB,IAAhBT,EAAe,EAAfA,SAAe,EACNU,mBAAS,IADH,mBACzBC,EADyB,KAClBC,EADkB,KAE1BC,EAAUC,iBAAO,MAavB,OACI,kBAACP,EAAD,KACI,kBAACC,EAAD,KACI,kBAAC,IAAD,CAAajC,UAAU,YAAYwC,KAAK,SAASC,KAAK,OACtD,2BACIf,KAAK,OACLgB,YAAY,eACZC,SAlBC,SAAAC,GAAU,IACfC,EAAUD,EAAME,OAAhBD,MAERE,aAAaT,EAAQU,SACrBX,EAASQ,GAETP,EAAQU,QAAUC,WAAW,WACzBxB,EAASoB,IACV,MAWSA,MAAOT,O,4ZC1BpB,IAAMc,EAAgBxD,IAAOC,IAAV,KCIXwD,EAFC,kBAAM,kBAACD,EAAD,O,onBCDf,ICqFQE,GAlEF,WAAO,IAAD,EACqBjB,mBAAS,IAD9B,mBACRkB,EADQ,KACIC,EADJ,ODnBS,SAACD,GAAgB,IAAD,EACdlB,mBAAS,CAAEoB,OAAQ,KADL,mBACjCnB,EADiC,KAC1BC,EAD0B,OAEVF,oBAAS,GAFC,mBAEjCqB,EAFiC,KAExBC,EAFwB,OAGdtB,oBAAS,GAHK,mBAGjCuB,EAHiC,KAG1BC,EAH0B,KAKlCC,EAAW,wCAAG,WAAMC,GAAN,kBAAAC,EAAA,4DAChBH,GAAS,GACTF,GAAW,GAELM,EAAaF,EAASG,OAAO,QAJnB,kBAOgBC,MAAMJ,GAPtB,8BAOiCK,OAPjC,OAONC,EAPM,OAQZ9B,EAAS,SAAA+B,GAAI,aACNA,EADM,CAETb,QACoB,IAAhBQ,EAAA,uBACUK,EAAKb,QADf,aAC0BY,EAAOE,UADjC,aAEUF,EAAOE,SACrBC,UAAWF,EAAKE,WAAaH,EAAOE,QAAQ,GAC5CE,YAAaJ,EAAOK,KACpBC,WAAYN,EAAOO,gBAhBX,kDAoBZf,GAAS,GACTgB,QAAQC,IAAR,MArBY,QAuBhBnB,GAAW,GAvBK,wDAAH,sDAyCjB,OAfAoB,oBAAU,WACFC,eAAeC,WACf1C,EAAS2C,KAAKC,MAAMH,eAAeC,YACnCtB,GAAW,IAEXG,EAAYnD,IAEjB,IAEHoE,oBAAU,WACDxB,GACDyB,eAAeI,QAAQ,YAAaF,KAAKG,UAAU/C,KAExD,CAACiB,EAAYjB,IAET,CAAC,CAAEA,QAAOoB,UAASE,SAAUE,GClBhCwB,CAAa/B,GATF,8BAIPjB,MAASmB,EAJF,EAIEA,OAAQgB,EAJV,EAIUA,YAAaE,EAJvB,EAIuBA,WAAYH,EAJnC,EAImCA,UAC1Cd,EALO,EAKPA,QACAE,EANO,EAMPA,MAEJE,EARW,KA4Bf,OAAIF,EAAc,qDACbH,EAAO,GAGR,qCACMF,GACE,kBAAC,EAAD,CACInC,MAAK,UAAKR,GAAL,Od7CH,Sc6CG,OAAsC4D,EAAUe,eACrDjE,MAAOkD,EAAUgB,eACjBjE,KAAMiD,EAAUiB,WAGxB,kBAAC,EAAD,CAAW9D,SA5BE,SAAAuC,GACjB,IAAMwB,EAAWxB,EAASxD,EAAkBwD,EAASvD,EAErD6C,EAAcU,GACdJ,EAAY4B,MAyBR,kBAAC,EAAD,CAAM1E,OAAQuC,EAAa,gBAAkB,kBACxCE,EAAOkC,IAAI,SAAAC,GAAK,OACb,kBAAC,EAAD,CACIC,IAAKD,EAAME,GACX7D,WAAS,EACTb,MACIwE,EAAMG,YAAN,UACSnF,GADT,OdvDR,QcuDQ,OACwCgF,EAAMG,aACxCC,IAEVhE,QAAS4D,EAAME,GACfG,UAAWL,EAAMJ,oBAM5B9B,GAAW,kBAAC,EAAD,MACXe,EAAcE,IAAejB,GAC1B,kBAAC,EAAD,CAAanC,KAAK,YAAYI,SAzCnB,WACnB,IAAMuE,EAAc,UAAMxF,GAAN,OAAwB6C,EAAxB,iBAA2CkB,EAAc,GACvE0B,EAAe,UAAMxF,EAAN,iBAA+B8D,EAAc,GAIlEX,EAFiBP,EAAa2C,EAAiBC,OAM5B,kBAAC,EAAD,O,wjBCjDpB,IAAMC,GAAmBxG,IAAOC,IAAV,MCedwG,GAZI,SAAC,GAAD,IAAGT,EAAH,EAAGA,MAAH,OACf,kBAACQ,GAAD,KACI,yBAAKlG,UAAU,sBACX,kBAAC,IAAD,CAAMC,GAAG,KACL,oCAEJ,gCACA,2BAAIyF,M,kuDCTT,IAAMU,GAAkB1G,IAAOC,IAAV,KACZ,SAAAsB,GAAK,OACjBA,EAAMoF,SAAN,eACY3F,GADZ,OjBOkB,SiBPlB,OAC6CO,EAAMoF,SADnD,MAEI,SCqCOC,GApCG,SAAC,GAAD,IAAGZ,EAAH,EAAGA,MAAH,OACd,kBAACU,GAAD,CAAiBC,SAAUX,EAAML,eAC7B,yBAAKrF,UAAU,qBACX,yBAAKA,UAAU,oBACX,kBAAC,EAAD,CACIkB,MACIwE,EAAMG,YAAN,UACSnF,GADT,OlBAJ,QkBAI,OACwCgF,EAAMG,aACxCC,IAEV/D,WAAW,KAGnB,yBAAK/B,UAAU,kBACX,4BAAK0F,EAAMtE,OACX,oCACA,2BAAIsE,EAAMH,UAEV,yBAAKvF,UAAU,mBACX,6BACI,2CACA,yBAAKA,UAAU,SAAS0F,EAAMa,eAElC,yBAAKvG,UAAU,YACX,uCAAa0F,EAAMc,UAAUC,OAAS,EAAI,IAAM,IAC/Cf,EAAMc,UAAUf,IAAI,SAAAiB,GAAO,OACxB,uBAAGf,IAAKe,EAAQC,WAAYD,EAAQlE,cC3BnDoE,GAAe,SAAAC,GAM1B,OALkB,IAAIC,KAAKC,aAAa,QAAS,CAC/CC,MAAO,WACPC,SAAU,MACVC,sBAAuB,IAERC,OAAON,I,m8BCXnB,IAAMO,GAAqB1H,IAAOC,IAAV,MCgChB0H,GA5BM,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAQC,EAAjB,EAAiBA,QAAjB,OACjB,kBAACJ,GAAD,KACI,yBAAKpH,UAAU,wBACX,yBAAKA,UAAU,4BACX,kBAAC,IAAD,CAAaA,UAAU,UAAUwC,KAAK,UAAUC,KAAK,OACrD,0BAAMzC,UAAU,qBAAhB,iBFVQ,SAAAsH,GACtB,IAAMG,EAAQC,KAAKC,MAAML,EAAO,IAC1BM,EAAON,EAAO,GACpB,MAAM,GAAN,OAAUG,EAAV,aAAoBG,EAApB,KEQiCC,CAASP,KAIhC,yBAAKtH,UAAU,4BACX,kBAAC,IAAD,CAAaA,UAAU,YAAYwC,KAAK,QAAQC,KAAK,OACrD,0BAAMzC,UAAU,qBAAhB,WACa4G,GAAaW,KAI9B,yBAAKvH,UAAU,4BACX,kBAAC,IAAD,CAAaA,UAAU,aAAawC,KAAK,SAASC,KAAK,OACvD,0BAAMzC,UAAU,qBAAhB,YACc4G,GAAaY,Q,+gBCxBpC,IAAMM,GAAcpI,IAAOC,IAAV,MCyBToI,GAnBD,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACV,kBAACF,GAAD,KACI,yBACI5H,IACI8H,EAAMC,aAAN,UACSvH,GADT,OvBEI,QuBFJ,OACwCsH,EAAMC,cACxCnC,IAEV1F,IAAI,eAER,0BAAMJ,UAAU,cAAcgI,EAAMxF,MACpC,0BAAMxC,UAAU,mBAAmBgI,EAAME,a,wjBCf1C,ICqCQC,GA3BD,SAAC,GAAiB,IAAD,EDVF,SAAArG,GAAY,IAAD,EACVK,mBAAS,IADC,mBAC7BC,EAD6B,KACtBC,EADsB,OAENF,oBAAS,GAFH,mBAE7BqB,EAF6B,KAEpBC,EAFoB,OAGVtB,oBAAS,GAHC,mBAG7BuB,EAH6B,KAGtBC,EAHsB,KAK9ByE,EAAYC,sBAAW,uBAAC,qCAAAvE,EAAA,4DAC1BH,GAAS,GACTF,GAAW,GAFe,SAKhBI,EALgB,UAKFvD,EALE,iBAKcwB,EALd,oBAKiCvB,GALjC,SAMM0D,MAAMJ,GANZ,8BAMuBK,OANvB,cAMhBC,EANgB,OAOhBmE,EAPgB,UAOKhI,EAPL,iBAOqBwB,EAPrB,4BAOgDvB,GAPhD,UAQa0D,MAAMqE,GARnB,gCAQqCpE,OARrC,QAQhBqE,EARgB,OAShB/B,EAAY+B,EAAcC,KAAKC,OACjC,SAAAC,GAAM,MAAmB,aAAfA,EAAOC,MAGrBtG,EAAS,MACF8B,EADC,CAEJyE,OAAQL,EAAcM,KACtBrC,eAhBkB,kDAoBtB7C,GAAS,GApBa,QAsB1BF,GAAW,GAtBe,wDAwB3B,CAAC3B,IAiBJ,OAfA+C,oBAAU,WACFiE,aAAahH,IACb6C,QAAQC,IAAI,kBACZvC,EAAS2C,KAAKC,MAAM6D,aAAahH,KACjC2B,GAAW,KAEXkB,QAAQC,IAAI,OACZwD,MAEL,CAACA,EAAWtG,IAEf+C,oBAAU,WACNiE,aAAa5D,QAAQpD,EAASkD,KAAKG,UAAU/C,KAC9C,CAACN,EAASM,IAEN,CAACA,EAAOoB,EAASE,GCnCQqF,CADL,EAAdjH,SAAc,mBACpB4D,EADoB,KACblC,EADa,KACJE,EADI,KAI3B,OAFAiB,QAAQC,IAAIc,GAERhC,EAAc,sDAClBiB,QAAQC,IAAIlB,GACTF,EAAgB,kBAAC,EAAD,MAGnB,oCACI,kBAAC,GAAD,CAAYkC,MAAOA,EAAMJ,iBACxBX,QAAQC,IAAIc,GACb,kBAAC,GAAD,CAAWA,MAAOA,IAClB,kBAAC,GAAD,CACI4B,KAAM5B,EAAMsD,QACZzB,OAAQ7B,EAAM6B,OACdC,QAAS9B,EAAM8B,UAEnB,kBAAC,EAAD,CAAM1G,OAAO,WACR4E,EAAMkD,OAAOnD,IAAI,SAAAuC,GAAK,OACnB,kBAAC,GAAD,CAAOrC,IAAKqC,EAAMrB,UAAWqB,MAAOA,UC7BrCiB,GAFG,kBAAM,8C,sJCDjB,IAAMC,GAAcC,YAAH,MCmBTC,GAXH,kBAAM,oCACd,kBAAC,EAAD,MACA,kBAAC,IAAD,KACI,kBAAC,GAAD,CAAMC,KAAK,MACX,kBAAC,GAAD,CAAOA,KAAK,cACZ,kBAAC,GAAD,CAAUC,SAAO,KAGrB,kBAACJ,GAAD,QCdJK,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,U,kBCJjDnK,EAAOC,QAAU,IAA0B,uC","file":"static/js/main.c800191c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/reactMovie_logo.08494abf.png\";","module.exports = __webpack_public_path__ + \"static/media/tmdb_logo.30cd724b.svg\";","import styled from 'styled-components';\n\nexport const StyledHeader = styled.div`\n  background: #1c1c1c;\n  padding: 0 20px;\n  box-sizing: border-box;\n\n  .header-content {\n    max-width: 1280px;\n    min-height: 120px;\n    padding: 20px 0px;\n    margin: 0 auto;\n    box-sizing: border-box;\n\n    @media screen and (max-width: 500px) {\n      max-width: 1280px;\n      min-height: 0px;\n    }\n  }\n`;\n\nexport const StyledRMDBLogo = styled.img`\n  width: 250px;\n  margin-top: 20px;\n\n  @media screen and (max-width: 500px) {\n    width: 150px;\n    margin-top: 5px;\n  }\n`;\n\nexport const StyledTMDBLogo = styled.img`\n  width: 122px;\n  margin-top: 25px;\n  float: right;\n\n  @media screen and (max-width: 500px) {\n    display: inline-block;\n    width: 80px;\n    margin-top: 0px;\n  }\n`;\n","import React from 'react';\r\nimport { Link } from '@reach/router';\r\n\r\nimport RMDBLogo from '../images/reactMovie_logo.png';\r\nimport TMDBLogo from '../images/tmdb_logo.svg';\r\n\r\nimport { StyledHeader, StyledRMDBLogo, StyledTMDBLogo } from '../styles/StyledHeader'\r\n\r\nconst Header = () => (\r\n    <StyledHeader>\r\n        <div className='header-content'>\r\n            <Link to=\"/\">\r\n                <StyledRMDBLogo src={RMDBLogo} alt=\"rmdb-logo\" />\r\n                <StyledTMDBLogo src={TMDBLogo} alt=\"Tmdb-logo\" />\r\n            </Link>\r\n        </div>\r\n    </StyledHeader>\r\n)\r\n\r\nexport default Header;","// Configuration for TMDB\n// To se the latest configuration fetch it from https://api.themoviedb.org/3/configuration?api_key=019e8f375549e0bbd4a4191862ebc88f\n// Read more about the API here: https://developers.themoviedb.org/\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '844dba0bfd8f3a4f3799f6130ef9e335';\n\nconst SEARCH_BASE_URL = `${API_URL}search/movie?api_key=${API_KEY}&query=`;\nconst POPULAR_BASE_URL = `${API_URL}movie/popular?api_key=${API_KEY}`;\n\nconst IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\n// Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w500';\n\nexport { API_URL, API_KEY, IMAGE_BASE_URL, BACKDROP_SIZE, POSTER_SIZE, SEARCH_BASE_URL, POPULAR_BASE_URL };\n","import styled from 'styled-components';\n\nexport const StyledGrid = styled.div`\n  max-width: 1280px;\n  margin: 0 auto;\n  padding: 0 20px;\n  h1 {\n    font-family: 'Abel', sans-serif;\n    font-size: 42px;\n\n    @media screen and (max-width: 768px) {\n      font-size: 22px;\n    }\n  }\n`;\n\nexport const StyledGridContent = styled.div`\n  display: grid;\n  grid-template-columns: repeat(5, minmax(100px, 1fr));\n  grid-gap: 40px;\n  position: relative;\n\n  .grid-element {\n    animation: animateGrid 0.5s;\n  }\n\n  @keyframes animateGrid {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n\n  @media screen and (max-width: 1024px) {\n    grid-template-columns: repeat(4, minmax(100px, 1fr));\n  }\n\n  @media screen and (max-width: 768px) {\n    grid-template-columns: repeat(3, minmax(100px, 1fr));\n  }\n\n  @media screen and (max-width: 600px) {\n    grid-template-columns: repeat(2, minmax(100px, 1fr));\n  }\n\n  @media screen and (max-width: 375px) {\n    grid-template-columns: repeat(1, 1fr);\n  }\n`;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { StyledGrid, StyledGridContent } from '../styles/StyledGrid';\r\n\r\nconst Grid = ({ header, children }) => (\r\n    <StyledGrid>\r\n        <h1>{header}</h1>\r\n        <StyledGridContent>\r\n            {children}\r\n        </StyledGridContent>\r\n    </StyledGrid>\r\n);\r\n\r\nGrid.propTypes = {\r\n    header: PropTypes.string,\r\n}\r\n\r\nexport default Grid;","import styled from 'styled-components';\n\nexport const StyledHeroImage = styled.div`\n  background: ${props =>\n    `linear-gradient(\n      to bottom, rgba(0,0,0,0)\n      39%,rgba(0,0,0,0)\n      41%,rgba(0,0,0,0.65)\n      100%\n    ),\n    url('${props.image}'), #1c1c1c`};\n  background-size: 100%, cover !important;\n  background-position: center, center !important;\n  width: 100%;\n  height: 600px;\n  position: relative;\n  animation: animateHeroimage 1s;\n\n  .heroimage-content {\n    max-width: 1280px;\n    padding: 20px;\n    margin: 0 auto;\n  }\n\n  .heroimage-text {\n    z-index: 100;\n    max-width: 700px;\n    position: absolute;\n    bottom: 40px;\n    margin-right: 20px;\n    min-height: 100px;\n    background: rgba(0, 0, 0, 0);\n    color: #fff;\n\n    h1 {\n      font-family: 'Abel', sans-serif;\n      font-size: 48px;\n      color: #fff;\n\n      @media screen and (max-width: 720px) {\n        font-size: 38px;\n        color: #fff;\n      }\n    }\n\n    p {\n      font-family: 'Abel', sans-serif;\n      font-size: 22px;\n      line-height: 26px;\n      color: #fff;\n\n      @media screen and (max-width: 720px) {\n        font-size: 16px;\n        line-height: 20px;\n        color: #fff;\n      }\n    }\n\n    @media screen and (max-width: 720px) {\n      max-width: 100%;\n    }\n  }\n\n  @keyframes animateHeroimage {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n","import React from 'react';\r\n\r\nimport { StyledHeroImage } from '../styles/StyledHeroImage'\r\n\r\nconst HeroImage = ({ image, title, text }) => (\r\n    <StyledHeroImage image={image}>\r\n        <div className=\"heroimage-content\">\r\n            <div className=\"heroimage-text\">\r\n                <h1>{title}</h1>\r\n                <p>{text}</p>\r\n            </div>\r\n        </div>\r\n    </StyledHeroImage>)\r\n\r\nexport default HeroImage;","import styled from 'styled-components';\n\nexport const StyledLoadMoreBtn = styled.button`\n  background: #000;\n  width: 25%;\n  min-width: 200px;\n  height: 70px;\n  color: #fff;\n  cursor: pointer;\n  transition: all 0.3s;\n  border-radius: 40px;\n  font-family: 'Abel', sans-serif;\n  font-size: 28px;\n  max-width: 1280px;\n  display: block;\n  margin: 20px auto;\n  padding: 0 20px;\n  outline: none;\n\n  :hover {\n    opacity: 0.8;\n  }\n`;\n","import React from 'react';\r\n\r\nimport { StyledLoadMoreBtn } from '../styles/StyledLoadMoreBtn';\r\n\r\nconst LoadMoreBtn = ({ text, callback }) => (\r\n    <StyledLoadMoreBtn type=\"button\" onClick={callback}>\r\n        {text}\r\n    </StyledLoadMoreBtn>)\r\n\r\nexport default LoadMoreBtn;","import styled from 'styled-components';\n\nexport const StyledMovieThumb = styled.div`\n  img {\n    width: 100%;\n    height: auto;\n    /* max-height: 350px; */\n    transition: all 0.3s;\n    object-fit: cover;\n    border-radius: 20px;\n\n    :hover {\n      opacity: 0.8;\n    }\n\n    /* @media screen and (max-width: 1024px) {\n      height: 300px;\n    }\n\n    @media screen and (max-width: 768px) {\n      height: 350px;\n    }\n\n    @media screen and (max-width: 600px) {\n      max-height: 300px;\n    }\n\n    @media screen and (max-width: 375px) {\n      max-height: 450px;\n    } */\n\n    .clickable {\n      cursor: pointer;\n    }\n  }\n`;\n","import React from 'react';\r\nimport { Link } from '@reach/router';\r\n\r\nimport { StyledMovieThumb } from '../styles/StyledMovieThumb'\r\n\r\nconst MovieThumb = ({ image, movieId, clickable }) => (\r\n    <StyledMovieThumb>\r\n        {clickable ? (\r\n            <Link to={`/${movieId}`} >\r\n                <img className=\"clickable\" src={image} alt=\"movieThumb\" />\r\n            </Link>\r\n        ) : (\r\n            <img src={image} alt=\"movieThumb\" />\r\n        )\r\n        }\r\n    </StyledMovieThumb >)\r\n\r\nexport default MovieThumb;","import styled from 'styled-components';\n\nexport const StyledSearchBar = styled.div`\n  width: 100%;\n  height: 105px;\n  background: #1c1c1c;\n  padding: 25px 20px 0px 20px;\n  box-sizing: border-box;\n  color: #fff;\n`;\n\nexport const StyledSearchBarContent = styled.div`\n  max-width: 1280px;\n  width: 100%;\n  height: 55px;\n  background: #353535;\n  margin: 0 auto;\n  border-radius: 40px;\n  position: relative;\n  color: #fff;\n\n  .fa-search {\n    position: absolute;\n    left: 20px;\n    top: 12px;\n    color: #fff;\n    z-index: 1000;\n  }\n\n  input {\n    font-family: 'Abel', sans-serif;\n    font-size: 28px;\n    position: absolute;\n    left: 0px;\n    margin: 8px 0;\n    padding: 0 0 0 60px;\n    border: 0;\n    width: 95%;\n    background: transparent;\n    height: 40px;\n    color: #fff;\n    box-sizing: border-box;\n\n    :focus {\n      outline: none;\n    }\n\n    @media screen and (max-width: 720px) {\n      font-size: 28px;\n    }\n  }\n`;\n","import React, { useRef, useState } from 'react'\r\nimport FontAwesome from 'react-fontawesome';\r\n\r\nimport { StyledSearchBar, StyledSearchBarContent } from '../styles/StyledSearchBar'\r\n\r\nconst SearchBar = ({ callback }) => {\r\n    const [state, setState] = useState('');\r\n    const timeOut = useRef(null);\r\n\r\n    const doSearch = event => {\r\n        const { value } = event.target;\r\n\r\n        clearTimeout(timeOut.current);\r\n        setState(value);\r\n\r\n        timeOut.current = setTimeout(() => {\r\n            callback(value);\r\n        }, 500);\r\n        }\r\n\r\n    return (\r\n        <StyledSearchBar>\r\n            <StyledSearchBarContent>\r\n                <FontAwesome className=\"fa-search\" name=\"search\" size=\"2x\" />\r\n                <input\r\n                    type=\"text\"\r\n                    palceholder=\"Search Movie\"\r\n                    onChange={doSearch}\r\n                    value={state}\r\n                />\r\n            </StyledSearchBarContent>\r\n        </StyledSearchBar>\r\n    )\r\n}\r\n\r\nexport default SearchBar;","import styled from 'styled-components';\n\nexport const StyledSpinner = styled.div`\n  border: 5px solid #f3f3f3; /* Light grey */\n  border-top: 5px solid #16d47b; /* Blue */\n  border-radius: 50%;\n  width: 50px;\n  height: 50px;\n  animation: spin 0.8s linear infinite;\n  margin: 20px auto;\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n","import React from 'react';\r\n\r\nimport { StyledSpinner } from '../styles/StyledSpinner';\r\n\r\nconst Spinner = () => <StyledSpinner />\r\n\r\nexport default Spinner;","import { useState, useEffect } from 'react'\r\nimport { POPULAR_BASE_URL } from '../../config'\r\n\r\nexport const useHomeFetch = (searchTerm) => {\r\n    const [state, setState] = useState({ movies: [] });\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(false);\r\n\r\n    const fetchMovies = async endpoint => {\r\n        setError(false);\r\n        setLoading(true);\r\n\r\n        const isLoadMore = endpoint.search('page');\r\n\r\n        try {\r\n            const result = await (await fetch(endpoint)).json();\r\n            setState(prev => ({\r\n                ...prev,\r\n                movies:\r\n                    isLoadMore !== -1\r\n                        ? [...prev.movies, ...result.results]\r\n                        : [...result.results],\r\n                heroImage: prev.heroImage || result.results[0],\r\n                currentPage: result.page,\r\n                totalPages: result.total_pages,\r\n            }));\r\n\r\n        } catch (error) {\r\n            setError(true);\r\n            console.log(error);\r\n        }\r\n        setLoading(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (sessionStorage.homeState) {\r\n            setState(JSON.parse(sessionStorage.homeState));\r\n            setLoading(false);\r\n        } else {        \r\n            fetchMovies(POPULAR_BASE_URL);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() =>{\r\n        if (!searchTerm) {\r\n            sessionStorage.setItem('homeState', JSON.stringify(state));\r\n        }\r\n    }, [searchTerm, state])\r\n\r\n    return [{ state, loading, error, }, fetchMovies]\r\n\r\n};\r\n","import React, { useState, } from 'react';\r\n\r\nimport {\r\n    IMAGE_BASE_URL,\r\n    BACKDROP_SIZE,\r\n    POSTER_SIZE,\r\n    POPULAR_BASE_URL,\r\n    SEARCH_BASE_URL\r\n} from '../config';\r\n\r\nimport Grid from './elements/Grid';\r\nimport HeroImage from './elements/HeroImage';\r\nimport LoadMoreBtn from './elements/LoadMoreBtn'\r\nimport MovieThumb from './elements/MovieThumb';\r\nimport SearchBar from './elements/SearchBar';\r\nimport Spinner from './elements/Spinner';\r\n\r\nimport NoImage from './images/no_image.jpg';\r\n\r\n// Custom Hook\r\nimport { useHomeFetch } from './hooks/useHomeFetch';\r\n\r\nconst Home = () => {\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [\r\n        {\r\n            state: { movies, currentPage, totalPages, heroImage },\r\n            loading,\r\n            error,\r\n        },\r\n        fetchMovies\r\n    ] = useHomeFetch(searchTerm);\r\n\r\n\r\n    const searchMovies = search => {\r\n        const endPoint = search ? SEARCH_BASE_URL + search : POPULAR_BASE_URL;\r\n\r\n        setSearchTerm(search);\r\n        fetchMovies(endPoint);\r\n    }\r\n\r\n    const loadMoreMovies = () => {\r\n        const searchEndPoint = `${SEARCH_BASE_URL}${searchTerm}&page=${currentPage + 1}`;\r\n        const popularEndPoint = `${POPULAR_BASE_URL}&page=${currentPage + 1}`;\r\n\r\n        const endpoint = searchTerm ? searchEndPoint : popularEndPoint;\r\n\r\n        fetchMovies(endpoint);\r\n    }\r\n\r\n    if (error) return <div>Something went wrong</div>\r\n    if (!movies[0]) return <Spinner />\r\n\r\n    return (\r\n        <>\r\n            {!searchTerm && (\r\n                <HeroImage\r\n                    image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${heroImage.backdrop_path}`}\r\n                    title={heroImage.original_title}\r\n                    text={heroImage.overview}\r\n                />\r\n            )}\r\n            <SearchBar callback={searchMovies} />\r\n            <Grid header={searchTerm ? 'Search Result' : 'Popular Movies'}>\r\n                {movies.map(movie => (\r\n                    <MovieThumb\r\n                        key={movie.id}\r\n                        clickable\r\n                        image={\r\n                            movie.poster_path\r\n                                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\r\n                                : NoImage\r\n                        }\r\n                        movieId={movie.id}\r\n                        movieName={movie.original_title}\r\n                    />\r\n                ))\r\n                }\r\n\r\n            </Grid>\r\n            {loading && <Spinner />}\r\n            {currentPage < totalPages && !loading && (\r\n                <LoadMoreBtn text=\"Load more\" callback={loadMoreMovies} />\r\n            )}\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Home;","import styled from 'styled-components';\n\nexport const StyledNavigation = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: 70px;\n  background: #353535;\n  color: #fff;\n\n  .navigation-content {\n    max-width: 1280px;\n    margin: 0 auto;\n    padding: 0 20px;\n    width: 100%;\n\n    p {\n      font-family: 'Abel', sans-serif;\n      font-size: 22px;\n      float: left;\n      color: #fff;\n      padding-right: 10px;\n      text-decoration: none;\n\n      @media screen and (max-width: 768px) {\n        font-size: 16px;\n      }\n    }\n  }\n`;\n","import React from 'react';\r\nimport { Link } from '@reach/router';\r\n\r\nimport { StyledNavigation } from '../styles/StyledNavigation';\r\n\r\nconst Navigation = ({ movie }) => (\r\n    <StyledNavigation>\r\n        <div className=\"navigation-content\">\r\n            <Link to=\"/\" >\r\n                <p>Home</p>\r\n            </Link>\r\n            <p>|</p>\r\n            <p>{movie}</p>\r\n        </div>\r\n    </StyledNavigation>\r\n)\r\n\r\nexport default Navigation;","import styled from 'styled-components';\nimport { IMAGE_BASE_URL, BACKDROP_SIZE } from '../../config';\n\nexport const StyledMovieInfo = styled.div`\n  background: ${props =>\n    props.backdrop\n      ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${props.backdrop}')`\n      : '#000'};\n  background-size: cover !important;\n  background-position: center !important;\n  width: 100%;\n  padding: 40px 20px;\n  box-sizing: border-box;\n  animation: animateMovieinfo 1s;\n\n  .movieinfo-content {\n    max-width: 1280px;\n    min-height: 450px;\n    margin: 0 auto;\n    background: rgb(0, 0, 0, 0.7);\n    border-radius: 20px;\n    position: relative;\n  }\n\n  .movieinfo-thumb {\n    width: 300px;\n    float: left;\n\n    @media screen and (max-width: 768px) {\n      width: 100% !important;\n    }\n  }\n\n  .movieinfo-text {\n    font-family: Arial, Helvetica, sans-serif;\n    padding: 40px;\n    color: #fff;\n    overflow: hidden;\n\n    h1 {\n      font-family: 'Abel', sans-serif;\n      font-size: 48px;\n      margin: 0;\n\n      @media screen and (max-width: 1000px) {\n        font-size: 32px !important;\n      }\n    }\n\n    h3 {\n      font-size: 16px;\n      line-height: 0;\n      margin-top: 30px;\n    }\n\n    p {\n      font-family: 'Abel', sans-serif;\n      font-size: 18px;\n      line-height: 26px;\n    }\n  }\n\n  .rating-director {\n    display: flex;\n    justify-content: flex-start;\n  }\n\n  .score {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 35px;\n    height: 35px;\n    background: #fff;\n    color: #000;\n    font-weight: 800;\n    border-radius: 25px;\n    margin: 0px 0 0 0;\n  }\n\n  .director {\n    margin: 0 0 0 40px;\n\n    p {\n      margin: 0;\n    }\n  }\n\n  @media screen and (max-width: 768px) {\n    min-height: 600px;\n    height: auto;\n  }\n\n  @keyframes animateMovieinfo {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n","import React from 'react';\r\n\r\nimport NoImage from '../images/no_image.jpg';\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../../config';\r\nimport MovieThumb from './MovieThumb';\r\n\r\nimport { StyledMovieInfo } from '../styles/StyledMovieInfo';\r\n\r\nconst MovieInfo = ({ movie }) => (\r\n    <StyledMovieInfo backdrop={movie.backdrop_path}>\r\n        <div className=\"movieinfo-content\">\r\n            <div className=\"movieinfo-thumb \">\r\n                <MovieThumb\r\n                    image={\r\n                        movie.poster_path\r\n                            ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\r\n                            : NoImage\r\n                    }\r\n                    clickable={false}\r\n                />\r\n            </div>\r\n            <div className=\"movieinfo-text\">\r\n                <h1>{movie.title}</h1>\r\n                <h3>PLOT</h3>\r\n                <p>{movie.overview}</p>\r\n\r\n                <div className=\"rating-director\">\r\n                    <div>\r\n                        <h3>IMBD RATING</h3>\r\n                        <div className=\"score\">{movie.vote_average}</div>\r\n                    </div>\r\n                    <div className=\"director\">\r\n                        <h3>DIRECTOR{movie.directors.length > 1 ? 'S' : ''}</h3>\r\n                        {movie.directors.map(element => (\r\n                            <p key={element.credit_id}>{element.name}</p>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </StyledMovieInfo>\r\n\r\n);\r\n\r\nexport default MovieInfo;","// Convert time to hours and minutes\nexport const calcTime = time => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n};\n// Convert a number to money formatting\nexport const convertMoney = money => {\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n};\n","import styled from 'styled-components';\n\nexport const StyledMovieInfoBar = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  min-height: 100px;\n  height: auto;\n  background: #1c1c1c;\n  padding: 20px;\n  box-sizing: border-box;\n  font-family: 'Abel', sans-serif;\n  font-size: 20px;\n\n  .movieinfobar-content {\n    max-width: 1280px;\n    width: 100%;\n    margin: 0 auto;\n    color: #fff;\n  }\n\n  .movieinfobar-content-col {\n    float: left;\n    width: 33.33%;\n    box-sizing: border-box;\n    padding: 10px 20px 0 0;\n  }\n\n  .movieinfobar-info {\n    padding: 5px 0 0 10px;\n    float: left;\n  }\n\n  .fa-time,\n  .fa-revenue {\n    float: left;\n    margin-top: -4px;\n  }\n\n  .fa-budget {\n    float: left;\n    margin-top: -3px;\n  }\n\n  @media screen and (max-width: 768px) {\n    .fa-time,\n    .fa-revenue,\n    .fa-budget {\n      display: none;\n    }\n  }\n\n  @media screen and (max-width: 425px) {\n    font-size: 14px;\n  }\n`;\n","import React from 'react';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport { calcTime, convertMoney } from '../../helpers';\r\n\r\nimport { StyledMovieInfoBar} from '../styles/StyledMovieInfoBar';\r\n\r\nconst MovieInfoBar = ({ time, budget, revenue }) => (\r\n    <StyledMovieInfoBar>\r\n        <div className=\"movieinfobar-content\">\r\n            <div className=\"movieinfobar-content-col\">\r\n                <FontAwesome className=\"fa-time\" name=\"clock-o\" size=\"2x\" />\r\n                <span className=\"movieinfobar-info\">\r\n                    Running time: {calcTime(time)}\r\n                </span>\r\n            </div>\r\n\r\n            <div className=\"movieinfobar-content-col\">\r\n                <FontAwesome className=\"fa-budget\" name=\"money\" size=\"2x\" />\r\n                <span className=\"movieinfobar-info\">\r\n                    Budget: {convertMoney(budget)}\r\n                </span>\r\n            </div>\r\n\r\n            <div className=\"movieinfobar-content-col\">\r\n                <FontAwesome className=\"fa-revenue\" name=\"ticket\" size=\"2x\" />\r\n                <span className=\"movieinfobar-info\">\r\n                    Revenue: {convertMoney(revenue)}\r\n                </span>\r\n            </div>\r\n\r\n        </div>\r\n    </StyledMovieInfoBar>\r\n);\r\n\r\nexport default MovieInfoBar;","import styled from 'styled-components';\n\nexport const StyledActor = styled.div`\n  font-family: 'Abel', sans-serif;\n  color: #fff;\n  background: #1c1c1c;\n  border-radius: 20px;\n  padding: 5px;\n  text-align: center;\n\n  img {\n    display: block;\n    width: 100%;\n    height: 200px;\n    object-fit: cover;\n    border-radius: 15px;\n  }\n\n  .actor-name {\n    display: block;\n    font-size: 18px;\n    margin: 10px 0 0 0;\n  }\n\n  .actor-character {\n    display: block;\n    font-size: 16px;\n    margin: 0 0 10px 0;\n  }\n`;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport NoImage from '../images/no_image.jpg';\r\n\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../../config';\r\nimport { StyledActor } from '../styles/StyledActor';\r\n\r\nconst Actor = ({ actor }) => (\r\n    <StyledActor>\r\n        <img\r\n            src={\r\n                actor.profile_path\r\n                    ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}`\r\n                    : NoImage\r\n            }\r\n            alt=\"actorthumb\"\r\n        />\r\n        <span className=\"actor-name\">{actor.name}</span>\r\n        <span className=\"actor-character\">{actor.character}</span>\r\n    </StyledActor>\r\n);\r\n\r\nActor.propTypes = {\r\n    actor: PropTypes.object,\r\n}\r\n\r\nexport default Actor;","import { useState, useEffect, useCallback } from 'react';\r\n\r\nimport { API_KEY, API_URL } from '../../config';\r\n\r\nexport const useMovieFetch = movieId => {\r\n    const [state, setState] = useState({});\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(false);\r\n\r\n    const fetchData = useCallback(async () => {\r\n        setError(false);\r\n        setLoading(true);\r\n\r\n        try {\r\n            const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`\r\n            const result = await (await fetch(endpoint)).json();\r\n            const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`\r\n            const creditsResult = await (await fetch(creditsEndpoint)).json();\r\n            const directors = creditsResult.crew.filter(\r\n                member => member.job === 'Director'\r\n            );\r\n\r\n            setState({\r\n                ...result,\r\n                actors: creditsResult.cast,\r\n                directors,\r\n            })\r\n\r\n        } catch {\r\n            setError(true);\r\n        }\r\n        setLoading(false);\r\n\r\n    }, [movieId]);\r\n\r\n    useEffect(() => {\r\n        if (localStorage[movieId]) {\r\n            console.log(\"loacal storage\")\r\n            setState(JSON.parse(localStorage[movieId]));\r\n            setLoading(false);\r\n        } else{\r\n            console.log(\"API\")\r\n            fetchData();\r\n        }\r\n    }, [fetchData, movieId]);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(movieId, JSON.stringify(state));\r\n    }, [movieId, state]);\r\n\r\n    return [state, loading, error];\r\n};\r\n\r\n\r\n","import React from 'react'\r\n\r\n// components\r\n\r\nimport Navigation from './elements/Navigation';\r\nimport MovieInfo from './elements/MovieInfo';\r\nimport MovieInfoBar from './elements/MovieInfoBar';\r\nimport Actor from './elements/Actor';\r\nimport Grid from './elements/Grid';\r\nimport Spinner from './elements/Spinner';\r\n\r\n//custom hook\r\nimport { useMovieFetch } from './hooks/useMovieFetch';\r\n\r\nconst Movie = ({ movieId }) => {\r\n    const [movie, loading, error] = useMovieFetch(movieId);\r\n    console.log(movie);\r\n\r\n    if (error) return <div>Something went wrong</div>;\r\n    console.log(error)\r\n    if(loading) return <Spinner /> \r\n\r\n    return (\r\n    <>\r\n        <Navigation movie={movie.original_title} />\r\n        {console.log(movie)}\r\n        <MovieInfo movie={movie} />\r\n        <MovieInfoBar \r\n            time={movie.runtime}\r\n            budget={movie.budget}\r\n            revenue={movie.revenue}\r\n        />\r\n        <Grid header=\"Actors \">\r\n            {movie.actors.map(actor => (\r\n                <Actor key={actor.credit_id} actor={actor} />  \r\n            ))}\r\n        </Grid>\r\n    </>\r\n    )\r\n    };\r\n\r\nexport default Movie;","import React from 'react'\r\n\r\n\r\nconst NotFound  = () => <div>NOT FOUND...</div>\r\n\r\nexport default NotFound;","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n`;\n","import React from 'react';\nimport { Router } from '@reach/router';\n\nimport Header from './elements/Header';\nimport Home from './Home';\nimport Movie from './Moive';\nimport NotFound from './NotFound';\n\nimport { GlobalStyle } from './styles/GlobalStyle';\n\nconst App = () => <>\n    <Header />\n    <Router>\n        <Home path=\"/\" />\n        <Movie path=\"/:movieId\" />\n        <NotFound default />\n\n    </Router>\n    <GlobalStyle />\n</>;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/no_image.31f5bb1d.jpg\";"],"sourceRoot":""}